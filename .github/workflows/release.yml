name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false

      - name: Extract changelog for release notes
        id: changelog
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          # Extract the changelog section for this version
          if [ -f "CHANGELOG.md" ]; then
            awk -v tag="$TAG" '
              /^## \[/ {
                if (found) exit;
                if (index($0, tag) > 0) found=1;
              }
              found && /^## \[/ && !first { first=1; next; }
              found { print }
            ' CHANGELOG.md > release_notes.md
            
            if [ -s release_notes.md ]; then
              echo "Release notes extracted from CHANGELOG.md"
              cat release_notes.md
            else
              echo "No specific changelog entry found for $TAG"
              echo "See CHANGELOG.md for details" > release_notes.md
            fi
          else
            echo "CHANGELOG.md not found"
            echo "See repository for details" > release_notes.md
          fi

      - name: Build binaries
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          mkdir -p dist
          
          # Build for all platforms
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o dist/gtauto-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=${VERSION}" -o dist/gtauto-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o dist/gtauto-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${VERSION}" -o dist/gtauto-darwin-arm64 .
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=${VERSION}" -o dist/gtauto-windows-amd64.exe .

      - name: Create archives
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          cd dist
          
          # Create tar.gz archives for Unix systems
          tar czf gtauto-${VERSION}-linux-amd64.tar.gz gtauto-linux-amd64 ../README.md ../LICENSE ../CHANGELOG.md
          tar czf gtauto-${VERSION}-linux-arm64.tar.gz gtauto-linux-arm64 ../README.md ../LICENSE ../CHANGELOG.md
          tar czf gtauto-${VERSION}-darwin-amd64.tar.gz gtauto-darwin-amd64 ../README.md ../LICENSE ../CHANGELOG.md
          tar czf gtauto-${VERSION}-darwin-arm64.tar.gz gtauto-darwin-arm64 ../README.md ../LICENSE ../CHANGELOG.md
          
          # Create zip archive for Windows
          zip gtauto-${VERSION}-windows-amd64.zip gtauto-windows-amd64.exe ../README.md ../LICENSE ../CHANGELOG.md
          
          # List created files
          ls -lh *.tar.gz *.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          files: |
            dist/*.tar.gz
            dist/*.zip
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}